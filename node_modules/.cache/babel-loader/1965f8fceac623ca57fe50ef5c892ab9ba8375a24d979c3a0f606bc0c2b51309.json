{"ast":null,"code":"import React,{useRef}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const projectList=[{id:1,name:'LavyaMidha-PyramydAI',description:'Designed an internal AI workflow demo for Pyramyd.AI, showcasing image collaging from user inputs using segmentation models. Built a responsive UI with automated backend processing to highlight real-time media manipulation capabilities.',url:'https://github.com/lavyam/LavyaMidha-PyramydAI',language:'JavaScript',updated_at:'2025-05-15',category:'AI Applications'},{id:2,name:'Humor-Detection',description:'Developed a machine learning pipeline to classify tweets as humorous or non-humorous. Leveraged TF-IDF feature extraction and ensemble models, evaluated through cross-validation and performance metrics.',url:'https://github.com/lavyam/Humor-Detection',language:'Python',updated_at:'2025-04-01',category:'NLP'},{id:3,name:'Covid-19-Analysis',description:'Conducted global COVID-19 trend analysis by visualizing infection rates, death counts, and testing data. Built interactive plots to highlight cross-country comparisons and policy effectiveness over time.',url:'https://github.com/ShimonDasgupta/Covid-19-Analysis',language:'Python',updated_at:'2023-01-05',category:'Data Analysis'},{id:4,name:'Transformer-based-summarization',description:'Fine-tuned a BART-based transformer for abstractive summarization on article datasets. Implemented tokenization, beam search decoding, and ROUGE score evaluation to optimize summary quality.',url:'https://github.com/lavyam/Transformer-based-summarization',language:'Python',updated_at:'2024-07-11',category:'NLP'},{id:5,name:'ds4g-riseup-police-detail',description:'Analyzed Boston Police Department overtime budgets using city expense logs and incident-level data. Produced insights and policy briefs advocating reallocation of public resources toward underfunded community services.',url:'https://github.com/BU-Spark/ds4g-riseup-police-detail',language:'Python',updated_at:'2023-11-20',category:'Civic Analytics'},{id:6,name:'Facebook_Mutual_friends',description:'Simulated mutual friend discovery in a synthetic social network using adjacency matrix representations. Implemented efficient search algorithms to compute shared connections in large-scale graphs.',url:'https://github.com/lavyam/Facebook_Mutual_friends',language:'Python',updated_at:'2022-08-14',category:'Social Network Analysis'}];// Group projects by category\nconst groupedProjects=projectList.reduce((acc,project)=>{acc[project.category]=acc[project.category]||[];acc[project.category].push(project);return acc;},{});const Projects=()=>{const sectionRefs=useRef({});const scrollToSection=category=>{const section=sectionRefs.current[category];if(section){section.scrollIntoView({behavior:'smooth'});}};const categories=Object.keys(groupedProjects);return/*#__PURE__*/_jsxs(\"section\",{className:\"max-w-6xl mx-auto p-6 scroll-smooth\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-3xl font-bold mb-6\",children:\"\\uD83D\\uDCC2 Projects\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap gap-2 mb-6 sticky top-0 z-10 bg-white dark:bg-gray-900 py-3\",children:categories.map(category=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>scrollToSection(category),className:\"px-4 py-2 rounded-full bg-indigo-100 dark:bg-gray-700 text-indigo-700 dark:text-white text-sm font-medium hover:bg-indigo-200 dark:hover:bg-gray-600 transition\",children:category},category))}),categories.map(category=>/*#__PURE__*/_jsxs(\"div\",{ref:el=>sectionRefs.current[category]=el,className:\"mb-12\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-2xl font-semibold text-gray-800 dark:text-white mb-4\",children:category}),/*#__PURE__*/_jsx(\"div\",{className:\"grid gap-6 md:grid-cols-2\",children:groupedProjects[category].map(project=>/*#__PURE__*/_jsxs(\"div\",{className:\"border border-gray-300 dark:border-gray-700 rounded-xl p-4 bg-white dark:bg-gray-800 shadow hover:shadow-lg transition\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-xl font-semibold text-indigo-600 dark:text-indigo-300\",children:/*#__PURE__*/_jsx(\"a\",{href:project.url,target:\"_blank\",rel:\"noopener noreferrer\",children:project.name})}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 dark:text-gray-400 mt-2\",children:project.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-500 dark:text-gray-400 mt-2\",children:[project.language&&/*#__PURE__*/_jsxs(\"span\",{children:[\"\\uD83D\\uDEE0 \",project.language]}),/*#__PURE__*/_jsxs(\"span\",{className:\"ml-4\",children:[\"\\uD83D\\uDD04 Updated: \",new Date(project.updated_at).toLocaleDateString()]})]})]},project.id))})]},category))]});};export default Projects;","map":{"version":3,"names":["React","useRef","jsx","_jsx","jsxs","_jsxs","projectList","id","name","description","url","language","updated_at","category","groupedProjects","reduce","acc","project","push","Projects","sectionRefs","scrollToSection","section","current","scrollIntoView","behavior","categories","Object","keys","className","children","map","onClick","ref","el","href","target","rel","Date","toLocaleDateString"],"sources":["/Users/lavyamidha/lavya-portfolio/src/pages/Projects.jsx"],"sourcesContent":["import React, { useRef } from 'react';\n\nconst projectList = [\n  {\n    id: 1,\n    name: 'LavyaMidha-PyramydAI',\n    description: 'Designed an internal AI workflow demo for Pyramyd.AI, showcasing image collaging from user inputs using segmentation models. Built a responsive UI with automated backend processing to highlight real-time media manipulation capabilities.',\n    url: 'https://github.com/lavyam/LavyaMidha-PyramydAI',\n    language: 'JavaScript',\n    updated_at: '2025-05-15',\n    category: 'AI Applications'\n  },\n  {\n    id: 2,\n    name: 'Humor-Detection',\n    description: 'Developed a machine learning pipeline to classify tweets as humorous or non-humorous. Leveraged TF-IDF feature extraction and ensemble models, evaluated through cross-validation and performance metrics.',\n    url: 'https://github.com/lavyam/Humor-Detection',\n    language: 'Python',\n    updated_at: '2025-04-01',\n    category: 'NLP'\n  },\n  {\n    id: 3,\n    name: 'Covid-19-Analysis',\n    description: 'Conducted global COVID-19 trend analysis by visualizing infection rates, death counts, and testing data. Built interactive plots to highlight cross-country comparisons and policy effectiveness over time.',\n    url: 'https://github.com/ShimonDasgupta/Covid-19-Analysis',\n    language: 'Python',\n    updated_at: '2023-01-05',\n    category: 'Data Analysis'\n  },\n  {\n    id: 4,\n    name: 'Transformer-based-summarization',\n    description: 'Fine-tuned a BART-based transformer for abstractive summarization on article datasets. Implemented tokenization, beam search decoding, and ROUGE score evaluation to optimize summary quality.',\n    url: 'https://github.com/lavyam/Transformer-based-summarization',\n    language: 'Python',\n    updated_at: '2024-07-11',\n    category: 'NLP'\n  },\n  {\n    id: 5,\n    name: 'ds4g-riseup-police-detail',\n    description: 'Analyzed Boston Police Department overtime budgets using city expense logs and incident-level data. Produced insights and policy briefs advocating reallocation of public resources toward underfunded community services.',\n    url: 'https://github.com/BU-Spark/ds4g-riseup-police-detail',\n    language: 'Python',\n    updated_at: '2023-11-20',\n    category: 'Civic Analytics'\n  },\n  {\n    id: 6,\n    name: 'Facebook_Mutual_friends',\n    description: 'Simulated mutual friend discovery in a synthetic social network using adjacency matrix representations. Implemented efficient search algorithms to compute shared connections in large-scale graphs.',\n    url: 'https://github.com/lavyam/Facebook_Mutual_friends',\n    language: 'Python',\n    updated_at: '2022-08-14',\n    category: 'Social Network Analysis'\n  }\n];\n\n// Group projects by category\nconst groupedProjects = projectList.reduce((acc, project) => {\n  acc[project.category] = acc[project.category] || [];\n  acc[project.category].push(project);\n  return acc;\n}, {});\n\nconst Projects = () => {\n  const sectionRefs = useRef({});\n\n  const scrollToSection = (category) => {\n    const section = sectionRefs.current[category];\n    if (section) {\n      section.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n\n  const categories = Object.keys(groupedProjects);\n\n  return (\n    <section className=\"max-w-6xl mx-auto p-6 scroll-smooth\">\n      <h2 className=\"text-3xl font-bold mb-6\">ðŸ“‚ Projects</h2>\n\n      {/* Tab Buttons */}\n      <div className=\"flex flex-wrap gap-2 mb-6 sticky top-0 z-10 bg-white dark:bg-gray-900 py-3\">\n        {categories.map(category => (\n          <button\n            key={category}\n            onClick={() => scrollToSection(category)}\n            className=\"px-4 py-2 rounded-full bg-indigo-100 dark:bg-gray-700 text-indigo-700 dark:text-white text-sm font-medium hover:bg-indigo-200 dark:hover:bg-gray-600 transition\"\n          >\n            {category}\n          </button>\n        ))}\n      </div>\n\n      {/* Project Sections */}\n      {categories.map(category => (\n        <div\n          key={category}\n          ref={el => sectionRefs.current[category] = el}\n          className=\"mb-12\"\n        >\n          <h3 className=\"text-2xl font-semibold text-gray-800 dark:text-white mb-4\">{category}</h3>\n          <div className=\"grid gap-6 md:grid-cols-2\">\n            {groupedProjects[category].map(project => (\n              <div\n                key={project.id}\n                className=\"border border-gray-300 dark:border-gray-700 rounded-xl p-4 bg-white dark:bg-gray-800 shadow hover:shadow-lg transition\"\n              >\n                <h4 className=\"text-xl font-semibold text-indigo-600 dark:text-indigo-300\">\n                  <a href={project.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                    {project.name}\n                  </a>\n                </h4>\n                <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-2\">\n                  {project.description}\n                </p>\n                <div className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\n                  {project.language && <span>ðŸ›  {project.language}</span>}\n                  <span className=\"ml-4\">\n                    ðŸ”„ Updated: {new Date(project.updated_at).toLocaleDateString()}\n                  </span>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      ))}\n    </section>\n  );\n};\n\nexport default Projects;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}